-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_design_v_mix_0_0_MultiPixStream2AXIvideo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out420_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    out420_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    out420_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    out420_empty_n : IN STD_LOGIC;
    out420_read : OUT STD_LOGIC;
    m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    m_axis_video_TVALID : OUT STD_LOGIC;
    m_axis_video_TREADY : IN STD_LOGIC;
    m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    Height : IN STD_LOGIC_VECTOR (11 downto 0);
    WidthOut : IN STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of main_design_v_mix_0_0_MultiPixStream2AXIvideo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_reg_unsigned_short_1_fu_122_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal rows_reg_186 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_reg_unsigned_short_1_fu_128_ap_return : STD_LOGIC_VECTOR (11 downto 0);
    signal cols_reg_191 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_fu_143_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_reg_196 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln3231_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3231_reg_201 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3231_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln3231_reg_209 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_done : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_idle : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_ready : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_out420_read : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TREADY : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TVALID : STD_LOGIC;
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TKEEP : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TSTRB : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_reg_unsigned_short_1_fu_122_ap_start : STD_LOGIC;
    signal grp_reg_unsigned_short_1_fu_122_ap_done : STD_LOGIC;
    signal grp_reg_unsigned_short_1_fu_122_ap_idle : STD_LOGIC;
    signal grp_reg_unsigned_short_1_fu_122_ap_ready : STD_LOGIC;
    signal grp_reg_unsigned_short_1_fu_122_ap_ce : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state1_ignore_call8 : BOOLEAN;
    signal grp_reg_unsigned_short_1_fu_128_ap_start : STD_LOGIC;
    signal grp_reg_unsigned_short_1_fu_128_ap_done : STD_LOGIC;
    signal grp_reg_unsigned_short_1_fu_128_ap_idle : STD_LOGIC;
    signal grp_reg_unsigned_short_1_fu_128_ap_ready : STD_LOGIC;
    signal grp_reg_unsigned_short_1_fu_128_ap_ce : STD_LOGIC;
    signal ap_block_state1_ignore_call9 : BOOLEAN;
    signal sof_reg_86 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln3231_1_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_70 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal i_2_fu_163_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3183_fu_139_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component main_design_v_mix_0_0_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out420_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        out420_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        out420_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        out420_empty_n : IN STD_LOGIC;
        out420_read : OUT STD_LOGIC;
        m_axis_video_TREADY : IN STD_LOGIC;
        sof : IN STD_LOGIC_VECTOR (0 downto 0);
        cols : IN STD_LOGIC_VECTOR (11 downto 0);
        sub : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axis_video_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        m_axis_video_TVALID : OUT STD_LOGIC;
        m_axis_video_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axis_video_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axis_video_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component main_design_v_mix_0_0_reg_unsigned_short_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        d : IN STD_LOGIC_VECTOR (11 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98 : component main_design_v_mix_0_0_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start,
        ap_done => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_done,
        ap_idle => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_idle,
        ap_ready => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_ready,
        out420_dout => out420_dout,
        out420_num_data_valid => ap_const_lv3_0,
        out420_fifo_cap => ap_const_lv3_0,
        out420_empty_n => out420_empty_n,
        out420_read => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_out420_read,
        m_axis_video_TREADY => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TREADY,
        sof => sof_reg_86,
        cols => cols_reg_191,
        sub => sub_reg_196,
        m_axis_video_TDATA => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TDATA,
        m_axis_video_TVALID => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TVALID,
        m_axis_video_TKEEP => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TKEEP,
        m_axis_video_TSTRB => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TSTRB,
        m_axis_video_TUSER => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TUSER,
        m_axis_video_TLAST => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TLAST,
        m_axis_video_TID => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TID,
        m_axis_video_TDEST => grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TDEST);

    grp_reg_unsigned_short_1_fu_122 : component main_design_v_mix_0_0_reg_unsigned_short_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reg_unsigned_short_1_fu_122_ap_start,
        ap_done => grp_reg_unsigned_short_1_fu_122_ap_done,
        ap_idle => grp_reg_unsigned_short_1_fu_122_ap_idle,
        ap_ready => grp_reg_unsigned_short_1_fu_122_ap_ready,
        ap_ce => grp_reg_unsigned_short_1_fu_122_ap_ce,
        d => Height,
        ap_return => grp_reg_unsigned_short_1_fu_122_ap_return);

    grp_reg_unsigned_short_1_fu_128 : component main_design_v_mix_0_0_reg_unsigned_short_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reg_unsigned_short_1_fu_128_ap_start,
        ap_done => grp_reg_unsigned_short_1_fu_128_ap_done,
        ap_idle => grp_reg_unsigned_short_1_fu_128_ap_idle,
        ap_ready => grp_reg_unsigned_short_1_fu_128_ap_ready,
        ap_ce => grp_reg_unsigned_short_1_fu_128_ap_ce,
        d => WidthOut,
        ap_return => grp_reg_unsigned_short_1_fu_128_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln3231_1_fu_158_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln3231_1_fu_158_p2 = ap_const_lv1_0))) then 
                    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_ready = ap_const_logic_1)) then 
                    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                i_fu_70 <= ap_const_lv12_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln3231_1_fu_158_p2 = ap_const_lv1_0))) then 
                i_fu_70 <= i_2_fu_163_p2;
            end if; 
        end if;
    end process;

    sof_reg_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                sof_reg_86 <= and_ln3231_reg_209;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                sof_reg_86 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                and_ln3231_reg_209 <= and_ln3231_fu_169_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                cols_reg_191 <= grp_reg_unsigned_short_1_fu_128_ap_return;
                icmp_ln3231_reg_201 <= icmp_ln3231_fu_149_p2;
                rows_reg_186 <= grp_reg_unsigned_short_1_fu_122_ap_return;
                sub_reg_196 <= sub_fu_143_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_done, ap_block_state1, ap_CS_fsm_state4, icmp_ln3231_1_fu_158_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln3231_1_fu_158_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    and_ln3231_fu_169_p2 <= (sof_reg_86 and icmp_ln3231_reg_201);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_done)
    begin
        if ((grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call8_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call8 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state1_ignore_call9_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call9 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, icmp_ln3231_1_fu_158_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln3231_1_fu_158_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, icmp_ln3231_1_fu_158_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln3231_1_fu_158_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_ap_start_reg;
    grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TREADY <= (m_axis_video_TREADY and ap_CS_fsm_state4);

    grp_reg_unsigned_short_1_fu_122_ap_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state1_ignore_call8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call8)))) then 
            grp_reg_unsigned_short_1_fu_122_ap_ce <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_1_fu_122_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_reg_unsigned_short_1_fu_122_ap_start_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_block_state1_ignore_call8)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call8))) then 
            grp_reg_unsigned_short_1_fu_122_ap_start <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_1_fu_122_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_reg_unsigned_short_1_fu_128_ap_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state1_ignore_call9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call9)))) then 
            grp_reg_unsigned_short_1_fu_128_ap_ce <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_1_fu_128_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_reg_unsigned_short_1_fu_128_ap_start_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, ap_block_state1_ignore_call9)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call9))) then 
            grp_reg_unsigned_short_1_fu_128_ap_start <= ap_const_logic_1;
        else 
            grp_reg_unsigned_short_1_fu_128_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    i_2_fu_163_p2 <= std_logic_vector(unsigned(i_fu_70) + unsigned(ap_const_lv12_1));
    icmp_ln3231_1_fu_158_p2 <= "1" when (i_fu_70 = rows_reg_186) else "0";
    icmp_ln3231_fu_149_p2 <= "1" when (grp_reg_unsigned_short_1_fu_128_ap_return = ap_const_lv12_0) else "0";
    m_axis_video_TDATA <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TDATA;
    m_axis_video_TDEST <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TDEST;
    m_axis_video_TID <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TID;
    m_axis_video_TKEEP <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TKEEP;
    m_axis_video_TLAST <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TLAST;
    m_axis_video_TSTRB <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TSTRB;
    m_axis_video_TUSER <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TUSER;
    m_axis_video_TVALID <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_m_axis_video_TVALID;

    out420_read_assign_proc : process(grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_out420_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out420_read <= grp_MultiPixStream2AXIvideo_Pipeline_VITIS_LOOP_3233_3_fu_98_out420_read;
        else 
            out420_read <= ap_const_logic_0;
        end if; 
    end process;

    sub_fu_143_p2 <= std_logic_vector(unsigned(zext_ln3183_fu_139_p1) + unsigned(ap_const_lv13_1FFF));
    zext_ln3183_fu_139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_reg_unsigned_short_1_fu_128_ap_return),13));
end behav;
