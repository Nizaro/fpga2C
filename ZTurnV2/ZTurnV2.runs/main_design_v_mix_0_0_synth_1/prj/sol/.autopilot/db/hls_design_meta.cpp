#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axis_video_TDATA", 24, hls_in, 0, "axis", "in_data", 1),
	Port_Property("s_axis_video_TVALID", 1, hls_in, 6, "axis", "in_vld", 1),
	Port_Property("s_axis_video_TREADY", 1, hls_out, 6, "axis", "in_acc", 1),
	Port_Property("s_axis_video_TKEEP", 3, hls_in, 1, "axis", "in_data", 1),
	Port_Property("s_axis_video_TSTRB", 3, hls_in, 2, "axis", "in_data", 1),
	Port_Property("s_axis_video_TUSER", 1, hls_in, 3, "axis", "in_data", 1),
	Port_Property("s_axis_video_TLAST", 1, hls_in, 4, "axis", "in_data", 1),
	Port_Property("s_axis_video_TID", 1, hls_in, 5, "axis", "in_data", 1),
	Port_Property("s_axis_video_TDEST", 1, hls_in, 6, "axis", "in_data", 1),
	Port_Property("s_axis_video1_TDATA", 24, hls_in, 7, "axis", "in_data", 1),
	Port_Property("s_axis_video1_TVALID", 1, hls_in, 13, "axis", "in_vld", 1),
	Port_Property("s_axis_video1_TREADY", 1, hls_out, 13, "axis", "in_acc", 1),
	Port_Property("s_axis_video1_TKEEP", 3, hls_in, 8, "axis", "in_data", 1),
	Port_Property("s_axis_video1_TSTRB", 3, hls_in, 9, "axis", "in_data", 1),
	Port_Property("s_axis_video1_TUSER", 1, hls_in, 10, "axis", "in_data", 1),
	Port_Property("s_axis_video1_TLAST", 1, hls_in, 11, "axis", "in_data", 1),
	Port_Property("s_axis_video1_TID", 1, hls_in, 12, "axis", "in_data", 1),
	Port_Property("s_axis_video1_TDEST", 1, hls_in, 13, "axis", "in_data", 1),
	Port_Property("s_axis_video2_TDATA", 24, hls_in, 14, "axis", "in_data", 1),
	Port_Property("s_axis_video2_TVALID", 1, hls_in, 20, "axis", "in_vld", 1),
	Port_Property("s_axis_video2_TREADY", 1, hls_out, 20, "axis", "in_acc", 1),
	Port_Property("s_axis_video2_TKEEP", 3, hls_in, 15, "axis", "in_data", 1),
	Port_Property("s_axis_video2_TSTRB", 3, hls_in, 16, "axis", "in_data", 1),
	Port_Property("s_axis_video2_TUSER", 1, hls_in, 17, "axis", "in_data", 1),
	Port_Property("s_axis_video2_TLAST", 1, hls_in, 18, "axis", "in_data", 1),
	Port_Property("s_axis_video2_TID", 1, hls_in, 19, "axis", "in_data", 1),
	Port_Property("s_axis_video2_TDEST", 1, hls_in, 20, "axis", "in_data", 1),
	Port_Property("layerAlpha_0", 16, hls_in, 28, "ap_none", "in_data", 1),
	Port_Property("layerStartX_0", 16, hls_in, 31, "ap_none", "in_data", 1),
	Port_Property("layerStartY_0", 16, hls_in, 34, "ap_none", "in_data", 1),
	Port_Property("layerWidth_0", 16, hls_in, 37, "ap_none", "in_data", 1),
	Port_Property("layerHeight_0", 16, hls_in, 40, "ap_none", "in_data", 1),
	Port_Property("layerScaleFactor_0", 8, hls_in, 43, "ap_none", "in_data", 1),
	Port_Property("layerVideoFormat_address0", 2, hls_out, 46, "ap_memory", "mem_address", 1),
	Port_Property("layerVideoFormat_ce0", 1, hls_out, 46, "ap_memory", "mem_ce", 1),
	Port_Property("layerVideoFormat_we0", 1, hls_out, 46, "ap_memory", "mem_we", 1),
	Port_Property("layerVideoFormat_d0", 8, hls_out, 46, "ap_memory", "mem_din", 1),
	Port_Property("layerVideoFormat_q0", 8, hls_in, 46, "ap_memory", "mem_dout", 1),
	Port_Property("layerVideoFormat_address1", 2, hls_out, 46, "ap_memory", "MemPortADDR2", 1),
	Port_Property("layerVideoFormat_ce1", 1, hls_out, 46, "ap_memory", "MemPortCE2", 1),
	Port_Property("layerVideoFormat_we1", 1, hls_out, 46, "ap_memory", "MemPortWE2", 1),
	Port_Property("layerVideoFormat_d1", 8, hls_out, 46, "ap_memory", "MemPortDIN2", 1),
	Port_Property("layerVideoFormat_q1", 8, hls_in, 46, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("layerStride_0", 16, hls_in, 47, "ap_none", "in_data", 1),
	Port_Property("K11", 32, hls_in, 51, "ap_none", "in_data", 1),
	Port_Property("K12", 32, hls_in, 52, "ap_none", "in_data", 1),
	Port_Property("K13", 32, hls_in, 53, "ap_none", "in_data", 1),
	Port_Property("K21", 32, hls_in, 54, "ap_none", "in_data", 1),
	Port_Property("K22", 32, hls_in, 55, "ap_none", "in_data", 1),
	Port_Property("K23", 32, hls_in, 56, "ap_none", "in_data", 1),
	Port_Property("K31", 32, hls_in, 57, "ap_none", "in_data", 1),
	Port_Property("K32", 32, hls_in, 58, "ap_none", "in_data", 1),
	Port_Property("K33", 32, hls_in, 59, "ap_none", "in_data", 1),
	Port_Property("ROffset", 32, hls_in, 60, "ap_none", "in_data", 1),
	Port_Property("GOffset", 32, hls_in, 61, "ap_none", "in_data", 1),
	Port_Property("BOffset", 32, hls_in, 62, "ap_none", "in_data", 1),
	Port_Property("K11_2", 32, hls_in, 63, "ap_none", "in_data", 1),
	Port_Property("K12_2", 32, hls_in, 64, "ap_none", "in_data", 1),
	Port_Property("K13_2", 32, hls_in, 65, "ap_none", "in_data", 1),
	Port_Property("K21_2", 32, hls_in, 66, "ap_none", "in_data", 1),
	Port_Property("K22_2", 32, hls_in, 67, "ap_none", "in_data", 1),
	Port_Property("K23_2", 32, hls_in, 68, "ap_none", "in_data", 1),
	Port_Property("K31_2", 32, hls_in, 69, "ap_none", "in_data", 1),
	Port_Property("K32_2", 32, hls_in, 70, "ap_none", "in_data", 1),
	Port_Property("K33_2", 32, hls_in, 71, "ap_none", "in_data", 1),
	Port_Property("YOffset", 32, hls_in, 72, "ap_none", "in_data", 1),
	Port_Property("UOffset", 32, hls_in, 73, "ap_none", "in_data", 1),
	Port_Property("VOffset", 32, hls_in, 74, "ap_none", "in_data", 1),
	Port_Property("m_axis_video_TDATA", 24, hls_out, 75, "axis", "out_data", 1),
	Port_Property("m_axis_video_TVALID", 1, hls_out, 81, "axis", "out_vld", 1),
	Port_Property("m_axis_video_TREADY", 1, hls_in, 81, "axis", "out_acc", 1),
	Port_Property("m_axis_video_TKEEP", 3, hls_out, 76, "axis", "out_data", 1),
	Port_Property("m_axis_video_TSTRB", 3, hls_out, 77, "axis", "out_data", 1),
	Port_Property("m_axis_video_TUSER", 1, hls_out, 78, "axis", "out_data", 1),
	Port_Property("m_axis_video_TLAST", 1, hls_out, 79, "axis", "out_data", 1),
	Port_Property("m_axis_video_TID", 1, hls_out, 80, "axis", "out_data", 1),
	Port_Property("m_axis_video_TDEST", 1, hls_out, 81, "axis", "out_data", 1),
	Port_Property("s_axi_CTRL_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWADDR", 12, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARADDR", 12, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "v_mix";
